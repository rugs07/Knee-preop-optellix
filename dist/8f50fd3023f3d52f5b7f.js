import"./style.css";import*as THREE from"three";import{OrbitControls}from"three/examples/jsm/controls/OrbitControls.js";import{STLLoader}from"three/examples/jsm/loaders/STLLoader.js";import{GUI}from"dat.gui";let container,scene,camera,renderer,controls,femur,tibia;const landmarks=[],planes=[];let selectedLandmark=null;function init(){container=document.getElementById("container"),scene=new THREE.Scene,scene.background=new THREE.Color(11184810),camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,1,1e3),camera.position.set(200,200,200),renderer=new THREE.WebGLRenderer({antialias:!0}),renderer.setSize(window.innerWidth,window.innerHeight),container.appendChild(renderer.domElement),controls=new OrbitControls(camera,renderer.domElement);const e=new THREE.AmbientLight(4210752);scene.add(e);const n=new THREE.DirectionalLight(16777215,.5);n.position.set(1,1,1).normalize(),scene.add(n);const t=new STLLoader;t.load("/models/Right_Femur.stl",(e=>{const n=new THREE.MeshPhongMaterial({color:16733491,specular:1118481,shininess:200});femur=new THREE.Mesh(e,n),femur.rotation.x=-.5*Math.PI,scene.add(femur)})),t.load("/models/Right_Tibia.stl",(e=>{const n=new THREE.MeshPhongMaterial({color:3407701,specular:1118481,shininess:200});tibia=new THREE.Mesh(e,n),tibia.rotation.x=-.5*Math.PI,scene.add(tibia)}));const a=document.createElement("div");a.style.position="absolute",a.style.top="10px",a.style.left="10px",document.body.appendChild(a),["Femur Center","Hip Center","Femur Proximal Canal","Femur Distal Canal","Medial Epicondyle","Lateral Epicondyle","Distal Medial Point","Distal Lateral Point","Posterior Medial Point","Posterior Lateral Point"].forEach((e=>{const n=document.createElement("button");n.textContent=e,n.onclick=()=>selectLandmark(e),a.appendChild(n)}));const o=new THREE.Raycaster,i=new THREE.Vector2;container.addEventListener("click",(function(e){if(!selectedLandmark)return;i.x=e.clientX/window.innerWidth*2-1,i.y=-e.clientY/window.innerHeight*2+1,o.setFromCamera(i,camera);const n=o.intersectObjects([femur,tibia]);n.length>0&&function(e){const n=new THREE.SphereGeometry(2,32,32),t=new THREE.MeshBasicMaterial({color:16776960}),a=new THREE.Mesh(n,t);a.position.copy(e),scene.add(a),landmarks.push({name:selectedLandmark,object:a}),selectedLandmark=null}(n[0].point)}));const r=document.createElement("button");r.textContent="Update Axes",r.onclick=createAxesAndPlanes,a.appendChild(r);const s=document.createElement("button");s.textContent="Create Perpendicular Plane",s.onclick=createPerpendicularPlane,a.appendChild(s);const c=new GUI,d={varusValgus:0,flexionExtension:0,update:function(){updatePlanes()}};c.add(d,"varusValgus",-10,10).name("Varus/Valgus (Â°)").onChange(d.update),c.add(d,"flexionExtension",-10,10).name("Flexion/Extension (Â°)").onChange(d.update),c.add({showResection:!0},"showResection").name("Toggle Resection").onChange((()=>{})),window.addEventListener("resize",onWindowResize)}function onWindowResize(){camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight)}function selectLandmark(e){selectedLandmark=e}function createAxesAndPlanes(){const e=landmarks.find((e=>"Hip Center"===e.name)),n=landmarks.find((e=>"Femur Center"===e.name));if(e&&n){const t=(new THREE.BufferGeometry).setFromPoints([e.object.position,n.object.position]),a=new THREE.LineBasicMaterial({color:255}),o=new THREE.Line(t,a);scene.add(o),planes.push(o)}}function createPlane(e,n,t){const a=new THREE.PlaneGeometry(t,t),o=new THREE.MeshBasicMaterial({color:65280,side:THREE.DoubleSide,transparent:!0,opacity:.5}),i=new THREE.Mesh(a,o),r=new THREE.Quaternion;return r.setFromUnitVectors(new THREE.Vector3(0,0,1),e),i.applyQuaternion(r),i.position.copy(n),i}function createPerpendicularPlane(){const e=landmarks.find((e=>"Femur Center"===e.name)),n=landmarks.find((e=>"Hip Center"===e.name));if(e&&n){const t=createPlane((new THREE.Vector3).subVectors(n.object.position,e.object.position).normalize(),e.object.position,100);scene.add(t),planes.push(t)}}function updatePlanes(){}function animate(){requestAnimationFrame(animate),controls.update(),renderer.render(scene,camera)}document.addEventListener("DOMContentLoaded",(()=>{init(),animate()}));